import "tfplan/v2" as tfplan

# Lambda function resource limits for SPA infrastructure
lambda_functions = filter tfplan.resource_changes as _, rc {
    rc.type is "aws_lambda_function" and
    (rc.change.actions contains "create" or rc.change.actions contains "update" or rc.change.actions contains "no-op")
}

# Ensure Lambda functions have reasonable resource limits
lambda_resource_limits = rule {
    all lambda_functions as _, lambda {
        lambda.change.after.memory_size <= 512 and
        lambda.change.after.timeout <= 300 and
        lambda.change.after.runtime in ["nodejs18.x", "nodejs20.x", "nodejs22.x"]
    }
}

# Ensure Lambda functions follow SPA naming convention
lambda_naming = rule {
    all lambda_functions as _, lambda {
        lambda.change.after.function_name in ["DirectS3Upload", "AdminFileManager", "BucketAdministrator", "ListS3Buckets"]
    }
}

# Ensure Lambda functions have proper environment configuration
lambda_environment = rule {
    all lambda_functions as _, lambda {
        lambda.change.after.environment is null or
        lambda.change.after.environment is undefined or
        lambda.change.after.environment.variables is null or
        lambda.change.after.environment.variables is undefined or
        length(lambda.change.after.environment.variables) == 0
    }
}

main = rule {
    lambda_resource_limits and
    lambda_naming and
    lambda_environment
}
